import { describe, expect, it } from 'bun:test'
import CalculateDistance from './gridDistance'

describe('CalculateDistance', () => {
  //   (0, 0) | (1, 0) | (2, 0) | (3, 0)
  //   (0, 1) | (1, 1) | (2, 1) | (3, 1)
  //   (0, 2) | (1, 2) | (2, 2) | (3, 2)
  // This is a tube, represented in a 4x3 grid.
  // This means 0,0 to 3,0 is adjacent.
  // 0,0 to 1,1 is also adjacent, since we want diagonals to be counted as 1 distance.
  // That also means, 0,0 to 3,1 is also adjacent.
  it.each([
    [{ x: 0, y: 0 }, { x: 1, y: 0 }, 1],
    [{ x: 0, y: 0 }, { x: 2, y: 0 }, 2],
    [{ x: 0, y: 0 }, { x: 3, y: 0 }, 1],
    [{ x: 0, y: 0 }, { x: 0, y: 1 }, 1],
    [{ x: 0, y: 0 }, { x: 1, y: 1 }, 1],
    [{ x: 0, y: 0 }, { x: 2, y: 1 }, 2],
    [{ x: 0, y: 0 }, { x: 3, y: 1 }, 1],
    [{ x: 0, y: 0 }, { x: 0, y: 2 }, 2],
    [{ x: 0, y: 0 }, { x: 1, y: 2 }, 2],
    [{ x: 0, y: 0 }, { x: 2, y: 2 }, 2],
    [{ x: 0, y: 0 }, { x: 3, y: 2 }, 2],
    [{ x: 1, y: 0 }, { x: 0, y: 0 }, 1],
    [{ x: 1, y: 0 }, { x: 2, y: 0 }, 1],
    [{ x: 1, y: 0 }, { x: 3, y: 0 }, 2],
    [{ x: 1, y: 0 }, { x: 1, y: 1 }, 1],
    [{ x: 1, y: 0 }, { x: 0, y: 1 }, 1],
    [{ x: 1, y: 0 }, { x: 2, y: 1 }, 1],
    [{ x: 1, y: 0 }, { x: 3, y: 1 }, 2],
    [{ x: 1, y: 0 }, { x: 1, y: 2 }, 2],
    [{ x: 1, y: 0 }, { x: 0, y: 2 }, 2],
    [{ x: 1, y: 0 }, { x: 2, y: 2 }, 2],
    [{ x: 1, y: 0 }, { x: 3, y: 2 }, 2],
    [{ x: 2, y: 0 }, { x: 0, y: 0 }, 2],
    [{ x: 2, y: 0 }, { x: 1, y: 0 }, 1],
    [{ x: 2, y: 0 }, { x: 3, y: 0 }, 1],
    [{ x: 2, y: 0 }, { x: 0, y: 1 }, 2],
    [{ x: 2, y: 0 }, { x: 1, y: 1 }, 1],
    [{ x: 2, y: 0 }, { x: 2, y: 1 }, 1],
    [{ x: 2, y: 0 }, { x: 3, y: 1 }, 1],
    [{ x: 2, y: 0 }, { x: 0, y: 2 }, 2],
    [{ x: 2, y: 0 }, { x: 1, y: 2 }, 2],
    [{ x: 2, y: 0 }, { x: 2, y: 2 }, 2],
    [{ x: 2, y: 0 }, { x: 3, y: 2 }, 2],
    [{ x: 3, y: 0 }, { x: 0, y: 0 }, 1],
    [{ x: 3, y: 0 }, { x: 1, y: 0 }, 2],
    [{ x: 3, y: 0 }, { x: 2, y: 0 }, 1],
    [{ x: 3, y: 0 }, { x: 0, y: 1 }, 1],
    [{ x: 3, y: 0 }, { x: 1, y: 1 }, 2],
    [{ x: 3, y: 0 }, { x: 2, y: 1 }, 1],
    [{ x: 3, y: 0 }, { x: 3, y: 1 }, 1],
    [{ x: 3, y: 0 }, { x: 0, y: 2 }, 2],
    [{ x: 3, y: 0 }, { x: 1, y: 2 }, 2],
    [{ x: 3, y: 0 }, { x: 2, y: 2 }, 2],
    [{ x: 3, y: 0 }, { x: 3, y: 2 }, 2],
    [{ x: 0, y: 1 }, { x: 0, y: 0 }, 1],
    [{ x: 0, y: 1 }, { x: 1, y: 0 }, 1],
    [{ x: 0, y: 1 }, { x: 2, y: 0 }, 2],
    [{ x: 0, y: 1 }, { x: 3, y: 0 }, 1],
    [{ x: 0, y: 1 }, { x: 1, y: 1 }, 1],
    [{ x: 0, y: 1 }, { x: 2, y: 1 }, 2],
    [{ x: 0, y: 1 }, { x: 3, y: 1 }, 1],
    [{ x: 0, y: 1 }, { x: 0, y: 2 }, 1],
    [{ x: 0, y: 1 }, { x: 1, y: 2 }, 1],
    [{ x: 0, y: 1 }, { x: 2, y: 2 }, 2],
    [{ x: 0, y: 1 }, { x: 3, y: 2 }, 1],
    [{ x: 1, y: 1 }, { x: 0, y: 0 }, 1],
    [{ x: 1, y: 1 }, { x: 1, y: 0 }, 1],
    [{ x: 1, y: 1 }, { x: 2, y: 0 }, 1],
    [{ x: 1, y: 1 }, { x: 3, y: 0 }, 2],
    [{ x: 1, y: 1 }, { x: 0, y: 1 }, 1],
    [{ x: 1, y: 1 }, { x: 2, y: 1 }, 1],
    [{ x: 1, y: 1 }, { x: 3, y: 1 }, 2],
    [{ x: 1, y: 1 }, { x: 0, y: 2 }, 1],
    [{ x: 1, y: 1 }, { x: 1, y: 2 }, 1],
    [{ x: 1, y: 1 }, { x: 2, y: 2 }, 1],
    [{ x: 1, y: 1 }, { x: 3, y: 2 }, 2],
    [{ x: 2, y: 1 }, { x: 0, y: 0 }, 2],
    [{ x: 2, y: 1 }, { x: 1, y: 0 }, 1],
    [{ x: 2, y: 1 }, { x: 2, y: 0 }, 1],
    [{ x: 2, y: 1 }, { x: 3, y: 0 }, 1],
    [{ x: 2, y: 1 }, { x: 0, y: 1 }, 2],
    [{ x: 2, y: 1 }, { x: 1, y: 1 }, 1],
    [{ x: 2, y: 1 }, { x: 3, y: 1 }, 1],
    [{ x: 2, y: 1 }, { x: 0, y: 2 }, 2],
    [{ x: 2, y: 1 }, { x: 1, y: 2 }, 1],
    [{ x: 2, y: 1 }, { x: 2, y: 2 }, 1],
    [{ x: 2, y: 1 }, { x: 3, y: 2 }, 1],
    [{ x: 3, y: 1 }, { x: 0, y: 0 }, 1],
    [{ x: 3, y: 1 }, { x: 1, y: 0 }, 2],
    [{ x: 3, y: 1 }, { x: 2, y: 0 }, 1],
    [{ x: 3, y: 1 }, { x: 3, y: 0 }, 1],
    [{ x: 3, y: 1 }, { x: 0, y: 1 }, 1],
    [{ x: 3, y: 1 }, { x: 1, y: 1 }, 2],
    [{ x: 3, y: 1 }, { x: 2, y: 1 }, 1],
    [{ x: 3, y: 1 }, { x: 0, y: 2 }, 1],
    [{ x: 3, y: 1 }, { x: 1, y: 2 }, 2],
    [{ x: 3, y: 1 }, { x: 2, y: 2 }, 1],
    [{ x: 3, y: 1 }, { x: 3, y: 2 }, 1],
    [{ x: 0, y: 2 }, { x: 0, y: 0 }, 2],
    [{ x: 0, y: 2 }, { x: 1, y: 0 }, 2],
    [{ x: 0, y: 2 }, { x: 2, y: 0 }, 2],
    [{ x: 0, y: 2 }, { x: 3, y: 0 }, 2],
    [{ x: 0, y: 2 }, { x: 0, y: 1 }, 1],
    [{ x: 0, y: 2 }, { x: 1, y: 1 }, 1],
    [{ x: 0, y: 2 }, { x: 2, y: 1 }, 2],
    [{ x: 0, y: 2 }, { x: 3, y: 1 }, 1],
    [{ x: 0, y: 2 }, { x: 1, y: 2 }, 1],
    [{ x: 0, y: 2 }, { x: 2, y: 2 }, 2],
    [{ x: 0, y: 2 }, { x: 3, y: 2 }, 1],
    [{ x: 1, y: 2 }, { x: 0, y: 0 }, 2],
    [{ x: 1, y: 2 }, { x: 1, y: 0 }, 2],
    [{ x: 1, y: 2 }, { x: 2, y: 0 }, 2],
    [{ x: 1, y: 2 }, { x: 3, y: 0 }, 2],
    [{ x: 1, y: 2 }, { x: 0, y: 1 }, 1],
    [{ x: 1, y: 2 }, { x: 1, y: 1 }, 1],
    [{ x: 1, y: 2 }, { x: 2, y: 1 }, 1],
    [{ x: 1, y: 2 }, { x: 3, y: 1 }, 2],
    [{ x: 1, y: 2 }, { x: 0, y: 2 }, 1],
    [{ x: 1, y: 2 }, { x: 2, y: 2 }, 1],
    [{ x: 1, y: 2 }, { x: 3, y: 2 }, 2],
    [{ x: 2, y: 2 }, { x: 0, y: 0 }, 2],
    [{ x: 2, y: 2 }, { x: 1, y: 0 }, 2],
    [{ x: 2, y: 2 }, { x: 2, y: 0 }, 2],
    [{ x: 2, y: 2 }, { x: 3, y: 0 }, 2],
    [{ x: 2, y: 2 }, { x: 0, y: 1 }, 2],
    [{ x: 2, y: 2 }, { x: 1, y: 1 }, 1],
    [{ x: 2, y: 2 }, { x: 2, y: 1 }, 1],
    [{ x: 2, y: 2 }, { x: 3, y: 1 }, 1],
    [{ x: 2, y: 2 }, { x: 0, y: 2 }, 2],
    [{ x: 2, y: 2 }, { x: 1, y: 2 }, 1],
    [{ x: 2, y: 2 }, { x: 3, y: 2 }, 1],
    [{ x: 3, y: 2 }, { x: 0, y: 0 }, 2],
    [{ x: 3, y: 2 }, { x: 1, y: 0 }, 2],
    [{ x: 3, y: 2 }, { x: 2, y: 0 }, 2],
    [{ x: 3, y: 2 }, { x: 3, y: 0 }, 2],
    [{ x: 3, y: 2 }, { x: 0, y: 1 }, 1],
    [{ x: 3, y: 2 }, { x: 1, y: 1 }, 2],
    [{ x: 3, y: 2 }, { x: 2, y: 1 }, 1],
    [{ x: 3, y: 2 }, { x: 3, y: 1 }, 1],
    [{ x: 3, y: 2 }, { x: 0, y: 2 }, 1],
    [{ x: 3, y: 2 }, { x: 1, y: 2 }, 2],
    [{ x: 3, y: 2 }, { x: 2, y: 2 }, 1],
  ])(
    'given oriPos: %o, targetPos: %o, then distance = %i',
    (oriPos, targetPos, distance) => {
      expect(CalculateDistance(oriPos, targetPos)).toBe(distance)
    },
  )
})
